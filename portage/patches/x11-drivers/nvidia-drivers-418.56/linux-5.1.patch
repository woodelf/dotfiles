diff -uprN work.orig/kernel/nvidia-drm/nvidia-drm-connector.c work/kernel/nvidia-drm/nvidia-drm-connector.c
--- work.orig/kernel/nvidia-drm/nvidia-drm-connector.c	2019-03-20 19:33:05.156731894 +0800
+++ work/kernel/nvidia-drm/nvidia-drm-connector.c	2019-03-20 19:34:00.174295558 +0800
@@ -20,6 +20,7 @@
  * DEALINGS IN THE SOFTWARE.
  */
 
+#include <linux/version.h>
 #include "nvidia-drm-conftest.h" /* NV_DRM_ATOMIC_MODESET_AVAILABLE */
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
@@ -201,6 +202,13 @@ nv_drm_connector_detect(struct drm_conne
     return __nv_drm_connector_detect_internal(connector);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+/* Add header constants missing after 5.1-rc1 */
+int drm_helper_probe_single_connector_modes(struct drm_connector
+		*connector, uint32_t maxX,
+		uint32_t maxY);
+#endif
+
 static struct drm_connector_funcs nv_connector_funcs = {
 #if defined NV_DRM_ATOMIC_HELPER_CONNECTOR_DPMS_PRESENT
     .dpms                   = drm_atomic_helper_connector_dpms,
diff -uprN work.orig/kernel/nvidia-drm/nvidia-drm-drv.c work/kernel/nvidia-drm/nvidia-drm-drv.c
--- work.orig/kernel/nvidia-drm/nvidia-drm-drv.c	2019-03-20 19:33:05.156731894 +0800
+++ work/kernel/nvidia-drm/nvidia-drm-drv.c	2019-03-20 19:34:52.330833149 +0800
@@ -20,6 +20,7 @@
  * DEALINGS IN THE SOFTWARE.
  */
 
+#include <linux/version.h>
 #include "nvidia-drm-conftest.h" /* NV_DRM_AVAILABLE and NV_DRM_DRM_GEM_H_PRESENT */
 
 #include "nvidia-drm-priv.h"
@@ -35,6 +36,14 @@
 #include "nvidia-drm-gem-nvkms-memory.h"
 #include "nvidia-drm-gem-user-memory.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+/* Add header constants missing after 5.1-rc1 */
+void drm_kms_helper_poll_init(struct drm_device *dev);
+void drm_kms_helper_poll_fini(struct drm_device *dev);
+bool drm_helper_hpd_irq_event(struct drm_device *dev);
+void drm_kms_helper_poll_disable(struct drm_device *dev);
+#endif
+
 #if defined(NV_DRM_AVAILABLE)
 
 #include "nvidia-drm-ioctl.h"
diff -uprN work.orig/kernel/nvidia-drm/nvidia-drm-encoder.c work/kernel/nvidia-drm/nvidia-drm-encoder.c
--- work.orig/kernel/nvidia-drm/nvidia-drm-encoder.c	2019-03-20 19:33:05.156731894 +0800
+++ work/kernel/nvidia-drm/nvidia-drm-encoder.c	2019-03-20 19:36:19.881741842 +0800
@@ -20,6 +20,7 @@
  * DEALINGS IN THE SOFTWARE.
  */
 
+#include <linux/version.h>
 #include "nvidia-drm-conftest.h" /* NV_DRM_ATOMIC_MODESET_AVAILABLE */
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
@@ -31,6 +32,11 @@
 #include "nvidia-drm-crtc.h"
 #include "nvidia-drm-helper.h"
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+/* Add header constants missing after 5.1-rc1 */
+void drm_kms_helper_hotplug_event(struct drm_device *dev);
+#endif
+
 #include <drm/drm_crtc_helper.h>
 
 #include <drm/drm_atomic.h>
@@ -152,6 +158,13 @@ nv_drm_encoder_new(struct drm_device *de
     return &nv_encoder->base;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+/* Add header constants missing after 5.1-rc1 */
+int drm_helper_probe_single_connector_modes(struct drm_connector
+		*connector, uint32_t maxX,
+		uint32_t maxY);
+#endif
+
 /*
  * Add encoder for given NvKmsKapiDisplay
  */
diff -uprN work.orig/kernel/nvidia-drm/nvidia-drm-gem-nvkms-memory.c work/kernel/nvidia-drm/nvidia-drm-gem-nvkms-memory.c
--- work.orig/kernel/nvidia-drm/nvidia-drm-gem-nvkms-memory.c	2019-03-20 19:33:05.156731894 +0800
+++ work/kernel/nvidia-drm/nvidia-drm-gem-nvkms-memory.c	2019-03-20 19:37:31.858494026 +0800
@@ -20,6 +20,7 @@
  * DEALINGS IN THE SOFTWARE.
  */
 
+#include <linux/version.h>
 #include "nvidia-drm-conftest.h"
 
 #if defined(NV_DRM_ATOMIC_MODESET_AVAILABLE)
@@ -377,7 +378,11 @@ static int __nv_drm_vma_fault(struct vm_
  */
 
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 1, 0)
 static int nv_drm_vma_fault(struct vm_fault *vmf)
+#else
+	static vm_fault_t nv_drm_vma_fault(struct vm_fault *vmf)
+#endif
 {
     return __nv_drm_vma_fault(vmf->vma, vmf);
 }
diff -uprN work.orig/kernel/nvidia-uvm/uvm8.c work/kernel/nvidia-uvm/uvm8.c
--- work.orig/kernel/nvidia-uvm/uvm8.c	2019-03-20 19:33:05.159731925 +0800
+++ work/kernel/nvidia-uvm/uvm8.c	2019-03-20 19:39:35.295792944 +0800
@@ -172,7 +172,11 @@ static int uvm_vm_fault_sigbus(struct vm
     return VM_FAULT_SIGBUS;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 1, 0)
 static int uvm_vm_fault_sigbus_wrapper(struct vm_fault *vmf)
+#else
+	static vm_fault_t uvm_vm_fault_sigbus_wrapper(struct vm_fault *vmf)
+#endif
 {
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
     return uvm_vm_fault_sigbus(vmf->vma, vmf);
@@ -507,7 +511,11 @@ convert_error:
     }
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 1, 0)
 static int uvm_vm_fault_wrapper(struct vm_fault *vmf)
+#else
+	static vm_fault_t uvm_vm_fault_wrapper(struct vm_fault *vmf)
+#endif
 {
 #if defined(NV_VM_OPS_FAULT_REMOVED_VMA_ARG)
     return uvm_vm_fault(vmf->vma, vmf);
